# Generated by Django 3.2.9 on 2024-10-10 17:03

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otpNumber', models.TextField(blank=True, default=None, max_length=6)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Customer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orderedOn', models.DateTimeField(auto_now_add=True)),
                ('couponCode', models.CharField(blank=True, max_length=100, null=True)),
                ('discount', models.FloatField(blank=True, default=0, null=True)),
                ('orderTotal', models.FloatField(blank=True, default=0, null=True)),
                ('taxOnOrder', models.FloatField(blank=True, default=0, null=True)),
                ('orderStatus', models.CharField(choices=[('PaymentPending', 'Payment Pending'), ('Cancelled', 'Cancelled'), ('RefundPending', 'Refund Pending'), ('Processing', 'Processing'), ('Packed', 'Packed'), ('Shipped', 'Shipped'), ('Delivered', 'Delivered'), ('ReturnRequested', 'Return Requested'), ('RefundIssued', 'Refund Issued')], max_length=100)),
                ('razorOrderId', models.CharField(blank=True, max_length=50, null=True)),
                ('razorPaymentId', models.CharField(blank=True, max_length=50, null=True)),
                ('razorSignature', models.CharField(blank=True, max_length=150, null=True)),
                ('trackingInfo', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('trackingProvider', models.CharField(blank=True, choices=[('DelhiVery', 'Delivery'), ('BlueDart', 'BlueDart'), ('DHL', 'DHL'), ('Ekart', 'Ekart'), ('DTDC', 'Podhewale'), ('Aramex', 'Aramex'), ('Ecom', 'Ecom'), ('FedEx', 'FedEx'), ('Gati', 'Gati'), ('SafeExpress', 'SafeExpress'), ('ProfessionalCouriers', 'ProfessionalCouriers')], default='', max_length=100, null=True)),
                ('addressid', models.IntegerField()),
                ('deliveryDate', models.DateField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='RazorOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('razorOrderId', models.CharField(blank=True, max_length=50, null=True)),
                ('userId', models.CharField(blank=True, max_length=50, null=True)),
                ('cartDict', models.CharField(blank=True, max_length=500, null=True)),
                ('checkoutTime', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='WishList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productId', models.CharField(default=0, max_length=100)),
                ('addedOn', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.customer')),
            ],
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address1', models.CharField(max_length=100)),
                ('address2', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('landMark', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(choices=[('Andaman-and-Nicobar-Islands', 'Andaman and Nicobar Islands'), ('Andhra-Pradesh', 'Andhra Pradesh'), ('Arunachal-Pradesh', 'Arunachal Pradesh'), ('Assam', 'Assam'), ('Bihar', 'Bihar'), ('Chandigarh', 'Chandigarh'), ('Chhattisgarh', 'Chhattisgarh'), ('Dadra-Nagar-Haveli', 'Dadra Nagar Haveli'), ('Delhi', 'Delhi'), ('Goa', 'Goa'), ('Gujarat', 'Gujarat'), ('Haryana', 'Haryana'), ('Himachal-Pradesh', 'Himachal Pradesh'), ('Jammu-and-Kashmir', 'Jammu and Kashmir'), ('Jharkhand', 'Jharkhand'), ('Karnataka', 'Karnataka'), ('Kerala', 'Kerala'), ('Ladakh', 'Ladakh'), ('Lakshadweep', 'Lakshadweep'), ('Madhya-Pradesh', 'Madhya Pradesh'), ('Maharashtra', 'Maharashtra'), ('Manipur', 'Manipur'), ('Meghalaya', 'Meghalaya'), ('Mizoram', 'Mizoram'), ('Nagaland', 'Nagaland'), ('Odisha', 'Odisha'), ('Puducherry', 'Puducherry'), ('Punjab', 'Punjab'), ('Rajasthan', 'Rajasthan'), ('Sikkim', 'Sikkim'), ('TamilNadu', 'TamilNadu'), ('Telangana', 'Telangana'), ('Tripura', 'Tripura'), ('Uttarakhand', 'Uttarakhand'), ('Uttar-Pradesh', 'Uttar Pradesh'), ('West-Bengal', 'West Bengal')], default=None, max_length=100)),
                ('pinCode', models.CharField(max_length=6, validators=[django.core.validators.MinLengthValidator(6), django.core.validators.MaxLengthValidator(6)])),
                ('contactNumber', models.CharField(max_length=10, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(10)])),
                ('contactPerson', models.CharField(max_length=100)),
                ('is_primary', models.BooleanField(default=0)),
                ('is_active', models.BooleanField(default=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address', to='customer.customer')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productId', models.CharField(max_length=100)),
                ('productName', models.CharField(max_length=200)),
                ('unitPrice', models.FloatField(default=0)),
                ('listPrice', models.FloatField(default=0)),
                ('paidPrice', models.FloatField(default=0)),
                ('taxAmount', models.FloatField(default=0)),
                ('discountAmount', models.FloatField(default=0)),
                ('quantity', models.IntegerField(default=1)),
                ('vendorId', models.IntegerField()),
                ('userId', models.CharField(default='', max_length=100)),
                ('returnRequested', models.BooleanField(default=0)),
                ('returnStatus', models.CharField(blank=True, max_length=50, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.order')),
            ],
            options={
                'verbose_name_plural': 'Order Items',
            },
        ),
    ]
